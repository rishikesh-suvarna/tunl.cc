name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux-windows:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Yarn
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Migrations
        run: yarn migrate

      - name: Build TypeScript
        run: yarn build

      - name: Install pkg globally
        run: yarn global add pkg

      - name: Build Linux and Windows binaries
        run: |
          mkdir -p binaries

          pkg dist/cli/index.js \
            --targets node18-linux-x64 \
            --output binaries/tunl-linux-x64

          pkg dist/cli/index.js \
            --targets node18-win-x64 \
            --output binaries/tunl-win-x64.exe

      - name: Compress binaries
        run: |
          cd binaries
          tar -czf tunl-linux-x64.tar.gz tunl-linux-x64
          zip tunl-win-x64.zip tunl-win-x64.exe
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-windows-binaries
          path: binaries/

  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Yarn
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Migrations
        run: yarn migrate

      - name: Build TypeScript
        run: yarn build

      - name: Install pkg globally
        run: yarn global add pkg

      - name: Build macOS binaries
        run: |
          mkdir -p binaries

          pkg dist/cli/index.js \
            --targets node18-macos-x64 \
            --output binaries/tunl-macos-x64

          pkg dist/cli/index.js \
            --targets node18-macos-arm64 \
            --output binaries/tunl-macos-arm64

      - name: Sign macOS binaries (ad-hoc)
        run: |
          codesign --sign - --force --deep binaries/tunl-macos-x64
          codesign --sign - --force --deep binaries/tunl-macos-arm64

          # Verify signatures
          codesign -v binaries/tunl-macos-x64
          codesign -v binaries/tunl-macos-arm64

      - name: Compress binaries
        run: |
          cd binaries
          tar -czf tunl-macos-x64.tar.gz tunl-macos-x64
          tar -czf tunl-macos-arm64.tar.gz tunl-macos-arm64
          cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: binaries/

  release:
    needs: [build-linux-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install Yarn
        run: corepack enable

      - name: Download Linux/Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-windows-binaries
          path: binaries

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-binaries
          path: binaries

      - name: List binaries
        run: ls -lah binaries/

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binaries/tunl-linux-x64
            binaries/tunl-macos-x64
            binaries/tunl-macos-arm64
            binaries/tunl-win-x64.exe
            binaries/tunl-linux-x64.tar.gz
            binaries/tunl-macos-x64.tar.gz
            binaries/tunl-macos-arm64.tar.gz
            binaries/tunl-win-x64.zip
          draft: false
          prerelease: false
          generate_release_notes: true
          name: Release ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Migrations
        run: yarn migrate

      - name: Build TypeScript
        run: yarn build

      - name: Publish to NPM
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
